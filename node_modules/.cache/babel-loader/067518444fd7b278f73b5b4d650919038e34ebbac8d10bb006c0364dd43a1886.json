{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Bureau\\\\ardede\\\\ardede\\\\src\\\\components\\\\Round1\\\\Round1.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from '../Card/Card'; // Assure-toi d'avoir un composant Card pour afficher les cartes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Round1({\n  player,\n  onAction,\n  deck\n}) {\n  _s();\n  const [currentCard, setCurrentCard] = useState(deck.pop());\n  const [guess, setGuess] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const handleSubmit = () => {\n    const isCorrect = guess === 'red' && (currentCard.suit === 'hearts' || currentCard.suit === 'diamonds') || guess === 'black' && (currentCard.suit === 'spades' || currentCard.suit === 'clubs');\n    setIsSubmitted(true);\n    onAction(isCorrect ? 'distribute' : 'drink', 1);\n  };\n  const handleNextPlayer = () => {\n    setIsSubmitted(false);\n    setCurrentCard(deck.pop());\n    setGuess('');\n    onAction('next');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"round1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [player, \", devine si la carte est rouge ou noire :\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isSubmitted,\n      onClick: () => setGuess('red'),\n      children: \"Rouge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isSubmitted,\n      onClick: () => setGuess('black'),\n      children: \"Noir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), isSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        card: currentCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [guess === 'red' ? 'Rouge' : 'Noir', \" \\xE9tait \", isCorrect ? 'correct' : 'incorrect', \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPlayer,\n        children: \"Joueur suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), !isSubmitted && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-btn\",\n      onClick: handleSubmit,\n      disabled: !guess,\n      children: \"Valider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Round1, \"VEmvoruByF6YkKgK9e/S2L1s5M0=\");\n_c = Round1;\nexport default Round1;\nvar _c;\n$RefreshReg$(_c, \"Round1\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","Round1","player","onAction","deck","_s","currentCard","setCurrentCard","pop","guess","setGuess","isSubmitted","setIsSubmitted","handleSubmit","isCorrect","suit","handleNextPlayer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","card","_c","$RefreshReg$"],"sources":["C:/Users/marti/OneDrive/Bureau/ardede/ardede/src/components/Round1/Round1.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Card from '../Card/Card'; // Assure-toi d'avoir un composant Card pour afficher les cartes\n\nfunction Round1({ player, onAction, deck }) {\n  const [currentCard, setCurrentCard] = useState(deck.pop());\n  const [guess, setGuess] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const handleSubmit = () => {\n    const isCorrect = (guess === 'red' && (currentCard.suit === 'hearts' || currentCard.suit === 'diamonds')) ||\n                      (guess === 'black' && (currentCard.suit === 'spades' || currentCard.suit === 'clubs'));\n\n    setIsSubmitted(true);\n    onAction(isCorrect ? 'distribute' : 'drink', 1);\n  };\n\n  const handleNextPlayer = () => {\n    setIsSubmitted(false);\n    setCurrentCard(deck.pop());\n    setGuess('');\n    onAction('next');\n  };\n\n  return (\n    <div className=\"round1\">\n      <h2>{player}, devine si la carte est rouge ou noire :</h2>\n      <button disabled={isSubmitted} onClick={() => setGuess('red')}>Rouge</button>\n      <button disabled={isSubmitted} onClick={() => setGuess('black')}>Noir</button>\n\n      {isSubmitted && (\n        <div>\n          <Card card={currentCard} />\n          <p>{guess === 'red' ? 'Rouge' : 'Noir'} Ã©tait {isCorrect ? 'correct' : 'incorrect'}.</p>\n          <button onClick={handleNextPlayer}>Joueur suivant</button>\n        </div>\n      )}\n\n      {!isSubmitted && (\n        <button className=\"submit-btn\" onClick={handleSubmit} disabled={!guess}>\n          Valider\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default Round1;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}