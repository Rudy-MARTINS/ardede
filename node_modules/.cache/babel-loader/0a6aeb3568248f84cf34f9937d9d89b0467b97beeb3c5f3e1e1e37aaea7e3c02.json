{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Bureau\\\\ardede\\\\ardede\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Rules from './components/Rules/Rules';\nimport Round1 from './components/Round1/Round1'; // Ajout du Round1\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [numPlayers, setNumPlayers] = useState(2);\n  const [playerNames, setPlayerNames] = useState(Array(numPlayers).fill(''));\n  const [showRules, setShowRules] = useState(false);\n  const [startGame, setStartGame] = useState(false);\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n  const [deck, setDeck] = useState(shuffleDeck(createDeck())); // Création du deck\n\n  const handleNumPlayersChange = e => {\n    const value = parseInt(e.target.value);\n    setNumPlayers(value);\n    setPlayerNames(Array(value).fill(''));\n  };\n  const handlePlayerNameChange = (e, index) => {\n    const newPlayerNames = [...playerNames];\n    newPlayerNames[index] = e.target.value;\n    setPlayerNames(newPlayerNames);\n  };\n  const handleViewRules = () => {\n    setShowRules(true);\n  };\n  const closeRules = () => {\n    setShowRules(false);\n  };\n  const handleStartGame = () => {\n    if (playerNames.every(name => name.trim() !== '')) {\n      setStartGame(true);\n    } else {\n      alert('Veuillez remplir tous les noms des joueurs.');\n    }\n  };\n\n  // Gestion de l'action du joueur\n  const handlePlayerAction = (action, gorgées) => {\n    console.log(`Action : ${action}, Gorgées : ${gorgées}`);\n    if (currentPlayerIndex < playerNames.length - 1) {\n      setCurrentPlayerIndex(currentPlayerIndex + 1); // Passer au joueur suivant\n    } else {\n      console.log(\"Tous les joueurs ont terminé le Round 1 !\");\n      // Passer au Round suivant ici\n    }\n  };\n\n  // Sauvegarde des cartes tirées (pour plus tard)\n  const saveCard = (player, card) => {\n    console.log(`Carte tirée par ${player} :`, card);\n  };\n  if (startGame) {\n    return /*#__PURE__*/_jsxDEV(Round1, {\n      player: playerNames[currentPlayerIndex],\n      deck: deck,\n      onAction: handlePlayerAction,\n      onSaveCard: saveCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"L' Ardechoise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title2\",\n      children: \"Gays des bois s'abstenir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"numPlayers\",\n        children: \"Nombre de joueurs :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"numPlayers\",\n        value: numPlayers,\n        onChange: handleNumPlayersChange,\n        children: [...Array(9).keys()].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: num + 2,\n          children: num + 2\n        }, num + 2, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-names\",\n        children: playerNames.map((name, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `Joueur ${index + 1}`,\n          value: name,\n          onChange: e => handlePlayerNameChange(e, index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"view-rules-btn\",\n      onClick: handleViewRules,\n      children: \"Voir les r\\xE8gles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-game-btn\",\n      onClick: handleStartGame,\n      children: \"Lancer le jeu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), showRules && /*#__PURE__*/_jsxDEV(Rules, {\n      onClose: closeRules\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n// Fonction pour créer le deck de cartes\n_s(App, \"Fua12YPqlaJT7k1Smrv86w01AnE=\");\n_c = App;\nfunction createDeck() {\n  const suits = ['hearts', 'diamonds', 'spades', 'clubs'];\n  const values = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n  const deck = [];\n  suits.forEach(suit => {\n    values.forEach(value => {\n      deck.push({\n        suit,\n        value\n      });\n    });\n  });\n  return deck;\n}\n\n// Fonction pour mélanger le deck\nfunction shuffleDeck(deck) {\n  for (let i = deck.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [deck[i], deck[j]] = [deck[j], deck[i]];\n  }\n  return deck;\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Rules","Round1","jsxDEV","_jsxDEV","App","_s","numPlayers","setNumPlayers","playerNames","setPlayerNames","Array","fill","showRules","setShowRules","startGame","setStartGame","currentPlayerIndex","setCurrentPlayerIndex","deck","setDeck","shuffleDeck","createDeck","handleNumPlayersChange","e","value","parseInt","target","handlePlayerNameChange","index","newPlayerNames","handleViewRules","closeRules","handleStartGame","every","name","trim","alert","handlePlayerAction","action","gorgées","console","log","length","saveCard","player","card","onAction","onSaveCard","fileName","_jsxFileName","lineNumber","columnNumber","className","children","htmlFor","id","onChange","keys","map","num","type","placeholder","onClick","onClose","_c","suits","values","forEach","suit","push","i","j","Math","floor","random","$RefreshReg$"],"sources":["C:/Users/marti/OneDrive/Bureau/ardede/ardede/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Rules from './components/Rules/Rules';\nimport Round1 from './components/Round1/Round1'; // Ajout du Round1\nimport './app.css';\n\nfunction App() {\n  const [numPlayers, setNumPlayers] = useState(2);\n  const [playerNames, setPlayerNames] = useState(Array(numPlayers).fill(''));\n  const [showRules, setShowRules] = useState(false);\n  const [startGame, setStartGame] = useState(false);\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n  const [deck, setDeck] = useState(shuffleDeck(createDeck())); // Création du deck\n\n  const handleNumPlayersChange = (e) => {\n    const value = parseInt(e.target.value);\n    setNumPlayers(value);\n    setPlayerNames(Array(value).fill(''));\n  };\n\n  const handlePlayerNameChange = (e, index) => {\n    const newPlayerNames = [...playerNames];\n    newPlayerNames[index] = e.target.value;\n    setPlayerNames(newPlayerNames);\n  };\n\n  const handleViewRules = () => {\n    setShowRules(true);\n  };\n\n  const closeRules = () => {\n    setShowRules(false);\n  };\n\n  const handleStartGame = () => {\n    if (playerNames.every(name => name.trim() !== '')) {\n      setStartGame(true);\n    } else {\n      alert('Veuillez remplir tous les noms des joueurs.');\n    }\n  };\n\n  // Gestion de l'action du joueur\n  const handlePlayerAction = (action, gorgées) => {\n    console.log(`Action : ${action}, Gorgées : ${gorgées}`);\n    if (currentPlayerIndex < playerNames.length - 1) {\n      setCurrentPlayerIndex(currentPlayerIndex + 1); // Passer au joueur suivant\n    } else {\n      console.log(\"Tous les joueurs ont terminé le Round 1 !\");\n      // Passer au Round suivant ici\n    }\n  };\n\n  // Sauvegarde des cartes tirées (pour plus tard)\n  const saveCard = (player, card) => {\n    console.log(`Carte tirée par ${player} :`, card);\n  };\n\n  if (startGame) {\n    return (\n      <Round1 \n        player={playerNames[currentPlayerIndex]} \n        deck={deck} \n        onAction={handlePlayerAction} \n        onSaveCard={saveCard} \n      />\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">L' Ardechoise</h1>\n      <h1 className=\"title2\">Gays des bois s'abstenir</h1>\n\n      <div className=\"player-selection\">\n        <label htmlFor=\"numPlayers\">Nombre de joueurs :</label>\n        <select id=\"numPlayers\" value={numPlayers} onChange={handleNumPlayersChange}>\n          {[...Array(9).keys()].map((num) => (\n            <option key={num + 2} value={num + 2}>{num + 2}</option>\n          ))}\n        </select>\n\n        <div className=\"player-names\">\n          {playerNames.map((name, index) => (\n            <input\n              key={index}\n              type=\"text\"\n              placeholder={`Joueur ${index + 1}`}\n              value={name}\n              onChange={(e) => handlePlayerNameChange(e, index)}\n            />\n          ))}\n        </div>\n      </div>\n\n      <button className=\"view-rules-btn\" onClick={handleViewRules}>Voir les règles</button>\n      <button className=\"start-game-btn\" onClick={handleStartGame}>Lancer le jeu</button>\n\n      {showRules && <Rules onClose={closeRules} />}\n    </div>\n  );\n}\n\n// Fonction pour créer le deck de cartes\nfunction createDeck() {\n  const suits = ['hearts', 'diamonds', 'spades', 'clubs'];\n  const values = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n  const deck = [];\n\n  suits.forEach((suit) => {\n    values.forEach((value) => {\n      deck.push({ suit, value });\n    });\n  });\n\n  return deck;\n}\n\n// Fonction pour mélanger le deck\nfunction shuffleDeck(deck) {\n  for (let i = deck.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [deck[i], deck[j]] = [deck[j], deck[i]];\n  }\n  return deck;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}