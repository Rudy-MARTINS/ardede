{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Bureau\\\\ardede\\\\ardede\\\\src\\\\components\\\\Round3\\\\Round3.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from '../Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Round3({\n  player,\n  onAction,\n  deck,\n  previousCards\n}) {\n  _s();\n  const [currentCard, setCurrentCard] = useState(null);\n  const [guess, setGuess] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const card1 = previousCards[0];\n  const card2 = previousCards[1];\n  const handleSubmit = () => {\n    const card = deck.pop(); // Tire une nouvelle carte\n    setCurrentCard(card);\n    const correct = guess === 'inside' && (card.value > card1.value && card.value < card2.value || card.value > card2.value && card.value < card1.value) || guess === 'outside' && (card.value < Math.min(card1.value, card2.value) || card.value > Math.max(card1.value, card2.value));\n    setIsCorrect(correct);\n    setIsSubmitted(true);\n    onAction(correct ? 'distribute' : 'drink', 3); // 3 gorgées pour ce round\n  };\n  const handleNextPlayer = () => {\n    setIsSubmitted(false);\n    setGuess('');\n    onAction('next');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"round3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [player, \", devine si la prochaine carte est \\xE0 l'int\\xE9rieur ou \\xE0 l'ext\\xE9rieur des valeurs des cartes pr\\xE9c\\xE9dentes :\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      card: card1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Card, {\n      card: card2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isSubmitted,\n      onClick: () => setGuess('inside'),\n      children: \"Int\\xE9rieur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isSubmitted,\n      onClick: () => setGuess('outside'),\n      children: \"Ext\\xE9rieur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), isSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        card: currentCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Les cartes pr\\xE9c\\xE9dentes \\xE9taient \", card1.value, \" et \", card2.value, \". La nouvelle carte est \", currentCard.value, \". \", isCorrect ? 'Correct !' : 'Incorrect !']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPlayer,\n        children: \"Joueur suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), !isSubmitted && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-btn\",\n      onClick: handleSubmit,\n      disabled: !guess,\n      children: \"Valider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Round3, \"xddLjgdy/6SdXEl9a3OUdoPU/ZQ=\");\n_c = Round3;\nexport default Round3;\nvar _c;\n$RefreshReg$(_c, \"Round3\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","Round3","player","onAction","deck","previousCards","_s","currentCard","setCurrentCard","guess","setGuess","isSubmitted","setIsSubmitted","isCorrect","setIsCorrect","card1","card2","handleSubmit","card","pop","correct","value","Math","min","max","handleNextPlayer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/marti/OneDrive/Bureau/ardede/ardede/src/components/Round3/Round3.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Card from '../Card/Card';\n\nfunction Round3({ player, onAction, deck, previousCards }) {\n  const [currentCard, setCurrentCard] = useState(null);\n  const [guess, setGuess] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(null);\n\n  const card1 = previousCards[0];\n  const card2 = previousCards[1];\n\n  const handleSubmit = () => {\n    const card = deck.pop(); // Tire une nouvelle carte\n    setCurrentCard(card);\n\n    const correct =\n      (guess === 'inside' && ((card.value > card1.value && card.value < card2.value) || (card.value > card2.value && card.value < card1.value))) ||\n      (guess === 'outside' && (card.value < Math.min(card1.value, card2.value) || card.value > Math.max(card1.value, card2.value)));\n\n    setIsCorrect(correct);\n    setIsSubmitted(true);\n    onAction(correct ? 'distribute' : 'drink', 3); // 3 gorgées pour ce round\n  };\n\n  const handleNextPlayer = () => {\n    setIsSubmitted(false);\n    setGuess('');\n    onAction('next');\n  };\n\n  return (\n    <div className=\"round3\">\n      <h2>{player}, devine si la prochaine carte est à l'intérieur ou à l'extérieur des valeurs des cartes précédentes :</h2>\n      <Card card={card1} /> {/* Affiche la carte du Round1 */}\n      <Card card={card2} /> {/* Affiche la carte du Round2 */}\n      <button disabled={isSubmitted} onClick={() => setGuess('inside')}>Intérieur</button>\n      <button disabled={isSubmitted} onClick={() => setGuess('outside')}>Extérieur</button>\n\n      {isSubmitted && (\n        <div>\n          <Card card={currentCard} />\n          <p>Les cartes précédentes étaient {card1.value} et {card2.value}. La nouvelle carte est {currentCard.value}. {isCorrect ? 'Correct !' : 'Incorrect !'}</p>\n          <button onClick={handleNextPlayer}>Joueur suivant</button>\n        </div>\n      )}\n\n      {!isSubmitted && (\n        <button className=\"submit-btn\" onClick={handleSubmit} disabled={!guess}>\n          Valider\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default Round3;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}