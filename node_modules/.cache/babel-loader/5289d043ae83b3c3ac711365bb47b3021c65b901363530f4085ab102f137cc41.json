{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Bureau\\\\ardede\\\\ardede\\\\src\\\\components\\\\DonnePrendPhase\\\\DonnePrendPhase.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DonnePrendPhase({\n  playerNames,\n  gorgeesDistribuees,\n  gorgeesRecues,\n  setGorgeesDistribuees,\n  setGorgeesRecues\n}) {\n  _s();\n  const [currentPair, setCurrentPair] = useState(0);\n  const [revealedCards, setRevealedCards] = useState(Array(9).fill(false));\n  const cardLabels = ['1 gorgée', '2 gorgées', '3 gorgées', '4 gorgées'];\n  const totalPairs = 4; // Nombre total de paires\n\n  const revealCard = index => {\n    if (index === currentPair || index === currentPair + 4) {\n      let newRevealedCards = [...revealedCards];\n      newRevealedCards[index] = true;\n      setRevealedCards(newRevealedCards);\n    } else {\n      alert('Veuillez révéler les cartes dans l\\'ordre.');\n    }\n  };\n  const nextPair = () => {\n    if (currentPair < totalPairs - 1) {\n      setCurrentPair(currentPair + 1);\n    } else {\n      // Terminer la phase Donne/Prend\n      alert('Phase Donne/Prend terminée !');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phase Donne / Prend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"donne-prend-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Je donne\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), [...Array(totalPairs)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card ${revealedCards[index] ? 'revealed' : 'hidden'}`,\n          onClick: () => revealCard(index),\n          children: revealedCards[index] ? `Carte révélée : ${cardLabels[index]}` : 'Carte'\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Je prends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), [...Array(totalPairs)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card ${revealedCards[index + 4] ? 'revealed' : 'hidden'}`,\n          onClick: () => revealCard(index + 4),\n          children: revealedCards[index + 4] ? `Carte révélée : ${cardLabels[index]}` : 'Carte'\n        }, index + 4, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextPair,\n      children: \"Continuer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(DonnePrendPhase, \"VSW0rzlGAL3NU1rz3NLS40Gf4eU=\");\n_c = DonnePrendPhase;\nexport default DonnePrendPhase;\nvar _c;\n$RefreshReg$(_c, \"DonnePrendPhase\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DonnePrendPhase","playerNames","gorgeesDistribuees","gorgeesRecues","setGorgeesDistribuees","setGorgeesRecues","_s","currentPair","setCurrentPair","revealedCards","setRevealedCards","Array","fill","cardLabels","totalPairs","revealCard","index","newRevealedCards","alert","nextPair","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","_","onClick","_c","$RefreshReg$"],"sources":["C:/Users/marti/OneDrive/Bureau/ardede/ardede/src/components/DonnePrendPhase/DonnePrendPhase.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction DonnePrendPhase({\n  playerNames,\n  gorgeesDistribuees,\n  gorgeesRecues,\n  setGorgeesDistribuees,\n  setGorgeesRecues,\n}) {\n  const [currentPair, setCurrentPair] = useState(0);\n  const [revealedCards, setRevealedCards] = useState(Array(9).fill(false));\n  const cardLabels = ['1 gorgée', '2 gorgées', '3 gorgées', '4 gorgées'];\n  const totalPairs = 4; // Nombre total de paires\n\n  const revealCard = (index) => {\n    if (index === currentPair || index === currentPair + 4) {\n      let newRevealedCards = [...revealedCards];\n      newRevealedCards[index] = true;\n      setRevealedCards(newRevealedCards);\n    } else {\n      alert('Veuillez révéler les cartes dans l\\'ordre.');\n    }\n  };\n\n  const nextPair = () => {\n    if (currentPair < totalPairs - 1) {\n      setCurrentPair(currentPair + 1);\n    } else {\n      // Terminer la phase Donne/Prend\n      alert('Phase Donne/Prend terminée !');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phase Donne / Prend</h2>\n      <div className=\"donne-prend-container\">\n        {/* Colonne Donne */}\n        <div className=\"column\">\n          <h3>Je donne</h3>\n          {[...Array(totalPairs)].map((_, index) => (\n            <div\n              key={index}\n              className={`card ${revealedCards[index] ? 'revealed' : 'hidden'}`}\n              onClick={() => revealCard(index)}\n            >\n              {revealedCards[index] ? `Carte révélée : ${cardLabels[index]}` : 'Carte'}\n            </div>\n          ))}\n        </div>\n\n        {/* Colonne Prend */}\n        <div className=\"column\">\n          <h3>Je prends</h3>\n          {[...Array(totalPairs)].map((_, index) => (\n            <div\n              key={index + 4}\n              className={`card ${revealedCards[index + 4] ? 'revealed' : 'hidden'}`}\n              onClick={() => revealCard(index + 4)}\n            >\n              {revealedCards[index + 4] ? `Carte révélée : ${cardLabels[index]}` : 'Carte'}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Bouton pour passer à la paire suivante */}\n      <button onClick={nextPair}>Continuer</button>\n    </div>\n  );\n}\n\nexport default DonnePrendPhase;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}