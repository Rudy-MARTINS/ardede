{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Bureau\\\\ardede\\\\ardede\\\\src\\\\components\\\\Round4\\\\Round4.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Card from \"../Card/Card\"; // Pour afficher la carte tirée\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Round4({\n  player,\n  onAction,\n  deck\n}) {\n  _s();\n  const [currentCard, setCurrentCard] = useState(null);\n  const [guess, setGuess] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(null);\n\n  // Fonction pour soumettre le choix du joueur\n  const handleSubmit = () => {\n    // Si le deck est vide, on arrête\n    if (!deck || deck.length === 0) {\n      console.error(\"Le deck est vide ou mal initialisé.\");\n      return;\n    }\n\n    // Tire une carte du deck\n    const card = deck.pop();\n    if (!card) {\n      console.error(\"Aucune carte n'a été tirée.\");\n      return;\n    }\n\n    // Définit la carte actuelle\n    setCurrentCard(card);\n\n    // Vérifie si le choix du joueur est correct\n    const correct = card.suit === guess;\n    setIsCorrect(correct);\n    setIsSubmitted(true);\n\n    // Gère l'action selon si c'est correct ou non\n    onAction(correct ? \"distribute\" : \"drink\", 4);\n  };\n\n  // Fonction pour passer au joueur suivant\n  const handleNextPlayer = () => {\n    setIsSubmitted(false);\n    setGuess(\"\");\n    onAction(\"next\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"round4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [player, \", devine la couleur de la prochaine carte :\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isSubmitted,\n      onClick: () => setGuess(\"Coeur\"),\n      children: \"C\\u0153ur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isSubmitted,\n      onClick: () => setGuess(\"Carreau\"),\n      children: \"Carreau\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isSubmitted,\n      onClick: () => setGuess(\"Pique\"),\n      children: \"Pique\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isSubmitted,\n      onClick: () => setGuess(\"Trèfle\"),\n      children: \"Tr\\xE8fle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), isSubmitted && currentCard && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        card: currentCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"La carte tir\\xE9e est \", currentCard.suit, \".\", \" \", isCorrect ? \"Correct !\" : \"Incorrect !\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPlayer,\n        children: \"Joueur suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), !isSubmitted && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-btn\",\n      onClick: handleSubmit,\n      disabled: !guess,\n      children: \"Valider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Round4, \"bX5Tic/1gx561Z8k570NCpiFObY=\");\n_c = Round4;\nexport default Round4;\nvar _c;\n$RefreshReg$(_c, \"Round4\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","Round4","player","onAction","deck","_s","currentCard","setCurrentCard","guess","setGuess","isSubmitted","setIsSubmitted","isCorrect","setIsCorrect","handleSubmit","length","console","error","card","pop","correct","suit","handleNextPlayer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/marti/OneDrive/Bureau/ardede/ardede/src/components/Round4/Round4.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"../Card/Card\"; // Pour afficher la carte tirée\n\nfunction Round4({ player, onAction, deck }) {\n  const [currentCard, setCurrentCard] = useState(null);\n  const [guess, setGuess] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(null);\n\n  // Fonction pour soumettre le choix du joueur\n  const handleSubmit = () => {\n    // Si le deck est vide, on arrête\n    if (!deck || deck.length === 0) {\n      console.error(\"Le deck est vide ou mal initialisé.\");\n      return;\n    }\n\n    // Tire une carte du deck\n    const card = deck.pop();\n    if (!card) {\n      console.error(\"Aucune carte n'a été tirée.\");\n      return;\n    }\n\n    // Définit la carte actuelle\n    setCurrentCard(card);\n\n    // Vérifie si le choix du joueur est correct\n    const correct = card.suit === guess;\n    setIsCorrect(correct);\n    setIsSubmitted(true);\n\n    // Gère l'action selon si c'est correct ou non\n    onAction(correct ? \"distribute\" : \"drink\", 4);\n  };\n\n  // Fonction pour passer au joueur suivant\n  const handleNextPlayer = () => {\n    setIsSubmitted(false);\n    setGuess(\"\");\n    onAction(\"next\");\n  };\n\n  return (\n    <div className=\"round4\">\n      <h2>{player}, devine la couleur de la prochaine carte :</h2>\n      <button disabled={isSubmitted} onClick={() => setGuess(\"Coeur\")}>\n        Cœur\n      </button>\n      <button disabled={isSubmitted} onClick={() => setGuess(\"Carreau\")}>\n        Carreau\n      </button>\n      <button disabled={isSubmitted} onClick={() => setGuess(\"Pique\")}>\n        Pique\n      </button>\n      <button disabled={isSubmitted} onClick={() => setGuess(\"Trèfle\")}>\n        Trèfle\n      </button>\n\n      {isSubmitted && currentCard && (\n        <div>\n          {/* Si la carte est bien définie, on l'affiche */}\n          <Card card={currentCard} />\n          <p>\n            La carte tirée est {currentCard.suit}.{\" \"}\n            {isCorrect ? \"Correct !\" : \"Incorrect !\"}\n          </p>\n          <button onClick={handleNextPlayer}>Joueur suivant</button>\n        </div>\n      )}\n\n      {!isSubmitted && (\n        <button className=\"submit-btn\" onClick={handleSubmit} disabled={!guess}>\n          Valider\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default Round4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}