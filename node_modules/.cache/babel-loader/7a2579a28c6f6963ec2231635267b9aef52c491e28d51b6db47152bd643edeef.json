{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Bureau\\\\ardede\\\\ardede\\\\src\\\\components\\\\Game\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Round1 from '../Round1/Round1';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game({\n  players\n}) {\n  _s();\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n  const [deck, setDeck] = useState(shuffleDeck(createDeck()));\n  const [playerCards, setPlayerCards] = useState({}); // Stocke les cartes tirées pour chaque joueur\n\n  const handleAction = (actionType, gorgées) => {\n    if (actionType === 'next') {\n      if (currentPlayerIndex < players.length - 1) {\n        setCurrentPlayerIndex(currentPlayerIndex + 1);\n      } else {\n        console.log(\"Phase 1 terminée !\");\n        // Ici, tu pourrais passer à la phase suivante\n      }\n    } else {\n      console.log(`${players[currentPlayerIndex]} doit ${actionType === 'distribute' ? 'distribuer' : 'boire'} ${gorgées} gorgées.`);\n    }\n  };\n  const saveCard = (player, card) => {\n    setPlayerCards(prevCards => ({\n      ...prevCards,\n      [player]: card\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: /*#__PURE__*/_jsxDEV(Round1, {\n      player: players[currentPlayerIndex],\n      onAction: handleAction,\n      deck: deck,\n      onSaveCard: saveCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n// Fonctions utilitaires pour créer et mélanger un jeu de cartes\n_s(Game, \"E5akonRnDRcY6YsVP2Eb89cjM44=\");\n_c = Game;\nfunction createDeck() {\n  const suits = ['hearts', 'diamonds', 'spades', 'clubs'];\n  const values = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n  const deck = [];\n  suits.forEach(suit => {\n    values.forEach(value => {\n      deck.push({\n        suit,\n        value\n      });\n    });\n  });\n  return deck;\n}\nfunction shuffleDeck(deck) {\n  for (let i = deck.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [deck[i], deck[j]] = [deck[j], deck[i]];\n  }\n  return deck;\n}\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Round1","jsxDEV","_jsxDEV","Game","players","_s","currentPlayerIndex","setCurrentPlayerIndex","deck","setDeck","shuffleDeck","createDeck","playerCards","setPlayerCards","handleAction","actionType","gorgées","length","console","log","saveCard","player","card","prevCards","className","children","onAction","onSaveCard","fileName","_jsxFileName","lineNumber","columnNumber","_c","suits","values","forEach","suit","value","push","i","j","Math","floor","random","$RefreshReg$"],"sources":["C:/Users/marti/OneDrive/Bureau/ardede/ardede/src/components/Game/Game.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Round1 from '../Round1/Round1';\n\nfunction Game({ players }) {\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n  const [deck, setDeck] = useState(shuffleDeck(createDeck()));\n  const [playerCards, setPlayerCards] = useState({}); // Stocke les cartes tirées pour chaque joueur\n\n  const handleAction = (actionType, gorgées) => {\n    if (actionType === 'next') {\n      if (currentPlayerIndex < players.length - 1) {\n        setCurrentPlayerIndex(currentPlayerIndex + 1);\n      } else {\n        console.log(\"Phase 1 terminée !\");\n        // Ici, tu pourrais passer à la phase suivante\n      }\n    } else {\n      console.log(`${players[currentPlayerIndex]} doit ${actionType === 'distribute' ? 'distribuer' : 'boire'} ${gorgées} gorgées.`);\n    }\n  };\n\n  const saveCard = (player, card) => {\n    setPlayerCards((prevCards) => ({\n      ...prevCards,\n      [player]: card,\n    }));\n  };\n\n  return (\n    <div className=\"game\">\n      <Round1\n        player={players[currentPlayerIndex]}\n        onAction={handleAction}\n        deck={deck}\n        onSaveCard={saveCard}\n      />\n    </div>\n  );\n}\n\n// Fonctions utilitaires pour créer et mélanger un jeu de cartes\nfunction createDeck() {\n  const suits = ['hearts', 'diamonds', 'spades', 'clubs'];\n  const values = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n  const deck = [];\n\n  suits.forEach((suit) => {\n    values.forEach((value) => {\n      deck.push({ suit, value });\n    });\n  });\n\n  return deck;\n}\n\nfunction shuffleDeck(deck) {\n  for (let i = deck.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [deck[i], deck[j]] = [deck[j], deck[i]];\n  }\n  return deck;\n}\n\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}