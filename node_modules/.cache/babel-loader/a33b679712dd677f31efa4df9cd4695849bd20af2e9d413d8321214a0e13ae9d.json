{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Bureau\\\\ardede\\\\ardede\\\\src\\\\components\\\\Round3\\\\Round3.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Card from \"../Card/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Round3({\n  player,\n  onAction,\n  deck,\n  previousCards\n}) {\n  _s();\n  const [currentCard, setCurrentCard] = useState(null);\n  const [guess, setGuess] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const card1 = previousCards[0];\n  const card2 = previousCards[1];\n  const handleSubmit = () => {\n    console.log(`Cartes précédentes : ${card1.value} et ${card2.value}`); // Vérification\n\n    if (!card1 || !card2) {\n      console.error(\"Les cartes des rounds précédents sont manquantes.\");\n      return;\n    }\n    const card = deck.pop(); // Tire une nouvelle carte\n    if (!card) {\n      console.error(\"Aucune carte tirée.\");\n      return;\n    }\n    setCurrentCard(card);\n    const correct = guess === \"inside\" && (card.value > card1.value && card.value < card2.value || card.value > card2.value && card.value < card1.value) || guess === \"outside\" && (card.value < Math.min(card1.value, card2.value) || card.value > Math.max(card1.value, card2.value));\n    setIsCorrect(correct);\n    setIsSubmitted(true);\n    onAction(correct ? \"distribute\" : \"drink\", 3);\n  };\n  const handleNextPlayer = () => {\n    setIsSubmitted(false);\n    setGuess(\"\");\n    onAction(\"next\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"round3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [player, \", devine si la prochaine carte est \\xE0 l'int\\xE9rieur ou \\xE0 l'ext\\xE9rieur des valeurs des cartes pr\\xE9c\\xE9dentes :\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), card1 && /*#__PURE__*/_jsxDEV(Card, {\n      card: card1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), card2 && /*#__PURE__*/_jsxDEV(Card, {\n      card: card2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isSubmitted,\n      onClick: () => setGuess(\"inside\"),\n      children: \"Int\\xE9rieur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isSubmitted,\n      onClick: () => setGuess(\"outside\"),\n      children: \"Ext\\xE9rieur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), !isSubmitted && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-btn\",\n      onClick: handleSubmit,\n      disabled: !guess,\n      children: \"Valider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), isSubmitted && currentCard && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        card: currentCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Les cartes pr\\xE9c\\xE9dentes \\xE9taient \", card1.value, \" et \", card2.value, \". La nouvelle carte est \", currentCard.value, \".\", \" \", isCorrect ? \"Correct !\" : \"Incorrect !\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPlayer,\n        children: \"Joueur suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Round3, \"bX5Tic/1gx561Z8k570NCpiFObY=\");\n_c = Round3;\nexport default Round3;\nvar _c;\n$RefreshReg$(_c, \"Round3\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","Round3","player","onAction","deck","previousCards","_s","currentCard","setCurrentCard","guess","setGuess","isSubmitted","setIsSubmitted","isCorrect","setIsCorrect","card1","card2","handleSubmit","console","log","value","error","card","pop","correct","Math","min","max","handleNextPlayer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/marti/OneDrive/Bureau/ardede/ardede/src/components/Round3/Round3.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"../Card/Card\";\n\nfunction Round3({ player, onAction, deck, previousCards }) {\n  const [currentCard, setCurrentCard] = useState(null);\n  const [guess, setGuess] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(null);\n\n  const card1 = previousCards[0];\n  const card2 = previousCards[1];\n\n  const handleSubmit = () => {\n    console.log(`Cartes précédentes : ${card1.value} et ${card2.value}`); // Vérification\n\n    if (!card1 || !card2) {\n      console.error(\"Les cartes des rounds précédents sont manquantes.\");\n      return;\n    }\n\n    const card = deck.pop(); // Tire une nouvelle carte\n    if (!card) {\n      console.error(\"Aucune carte tirée.\");\n      return;\n    }\n\n    setCurrentCard(card);\n\n    const correct =\n      (guess === \"inside\" &&\n        ((card.value > card1.value && card.value < card2.value) ||\n          (card.value > card2.value && card.value < card1.value))) ||\n      (guess === \"outside\" &&\n        (card.value < Math.min(card1.value, card2.value) ||\n          card.value > Math.max(card1.value, card2.value)));\n\n    setIsCorrect(correct);\n    setIsSubmitted(true);\n    onAction(correct ? \"distribute\" : \"drink\", 3);\n  };\n\n  const handleNextPlayer = () => {\n    setIsSubmitted(false);\n    setGuess(\"\");\n    onAction(\"next\");\n  };\n\n  return (\n    <div className=\"round3\">\n      <h2>{player}, devine si la prochaine carte est à l'intérieur ou à l'extérieur des valeurs des cartes précédentes :</h2>\n\n      {/* Vérifie que les deux cartes des rounds précédents existent avant de les afficher */}\n      {card1 && <Card card={card1} />}\n      {card2 && <Card card={card2} />}\n\n      <button disabled={isSubmitted} onClick={() => setGuess(\"inside\")}>\n        Intérieur\n      </button>\n      <button disabled={isSubmitted} onClick={() => setGuess(\"outside\")}>\n        Extérieur\n      </button>\n\n      {!isSubmitted && (\n        <button className=\"submit-btn\" onClick={handleSubmit} disabled={!guess}>\n          Valider\n        </button>\n      )}\n\n      {isSubmitted && currentCard && (\n        <div>\n          <Card card={currentCard} />\n          <p>\n            Les cartes précédentes étaient {card1.value} et {card2.value}. La\n            nouvelle carte est {currentCard.value}.{\" \"}\n            {isCorrect ? \"Correct !\" : \"Incorrect !\"}\n          </p>\n          <button onClick={handleNextPlayer}>Joueur suivant</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Round3;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}