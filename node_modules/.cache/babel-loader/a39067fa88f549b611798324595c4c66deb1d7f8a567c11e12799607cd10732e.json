{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Bureau\\\\ardede\\\\ardede\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './app.css';\nimport WowGuy from './assets/images/WowGuy.webp';\n\n// Fonction pour afficher un icône de carte\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardIcon = ({\n  value,\n  suit\n}) => {\n  const suitSymbols = {\n    'cœur': '♥️',\n    'carreau': '♦️',\n    'pique': '♠️',\n    'trèfle': '♣️'\n  };\n  const color = suit === 'cœur' || suit === 'carreau' ? 'red' : 'black';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'inline-block',\n      margin: '5px',\n      color\n    },\n    children: [value, \" \", suitSymbols[suit]]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = CardIcon;\nfunction App() {\n  _s();\n  const [numPlayers, setNumPlayers] = useState(2);\n  const [playerNames, setPlayerNames] = useState(Array(numPlayers).fill(''));\n  const [startGame, setStartGame] = useState(false);\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [message, setMessage] = useState('');\n  const [currentCard, setCurrentCard] = useState(null);\n  const [playerCards, setPlayerCards] = useState(Array(numPlayers).fill([]));\n  const [gorgeesDistribuees, setGorgeesDistribuees] = useState(Array(numPlayers).fill(0));\n  const [gorgeesRecues, setGorgeesRecues] = useState(Array(numPlayers).fill(0));\n  const [showRecap, setShowRecap] = useState(false);\n  const [waitingForConfirmation, setWaitingForConfirmation] = useState(false);\n  const [showIntermediatePage, setShowIntermediatePage] = useState(false);\n  const [cardRevealed, setCardRevealed] = useState(false); // Ajout de cet état manquant\n\n  const suits = ['cœur', 'carreau', 'pique', 'trèfle'];\n  const generateCard = () => {\n    const value = Math.floor(Math.random() * 13) + 1;\n    const suit = suits[Math.floor(Math.random() * 4)];\n    return {\n      value,\n      suit\n    };\n  };\n  const handleNumPlayersChange = e => {\n    const value = parseInt(e.target.value);\n    setNumPlayers(value);\n    setPlayerNames(Array(value).fill(''));\n    setPlayerCards(Array(value).fill([]));\n  };\n  const handlePlayerNameChange = (e, index) => {\n    const newPlayerNames = [...playerNames];\n    newPlayerNames[index] = e.target.value;\n    setPlayerNames(newPlayerNames);\n  };\n  const handleStartGame = () => {\n    if (playerNames.every(name => name.trim() !== '')) {\n      setStartGame(true);\n      setMessage(`${playerNames[currentPlayer]} commence le tour 1 : Rouge ou Noir.`);\n      const card = generateCard();\n      setCurrentCard(card);\n      setCardRevealed(false); // Reset de l'état de carte révélée à chaque début de tour\n    } else {\n      alert('Veuillez remplir tous les noms des joueurs.');\n    }\n  };\n  const handlePlayerGuess = guess => {\n    setCardRevealed(true); // Carte révélée\n\n    // Ajout des cartes dans le tableau de chaque joueur\n    const newPlayerCards = [...playerCards];\n    newPlayerCards[currentPlayer] = [...newPlayerCards[currentPlayer], currentCard];\n    setPlayerCards(newPlayerCards);\n\n    // Gérer le message et continuer le tour\n    setMessage(`${playerNames[currentPlayer]} a tiré ${currentCard.value} de ${currentCard.suit}.`);\n    nextTurn();\n  };\n  const nextTurn = () => {\n    let nextPlayer = (currentPlayer + 1) % numPlayers;\n    if (nextPlayer === 0) {\n      if (roundNumber === 4) {\n        setShowIntermediatePage(true);\n        return;\n      }\n      setRoundNumber(prev => prev % 4 + 1);\n    }\n    const newCard = generateCard();\n    setCurrentCard(newCard);\n    setCardRevealed(false); // Reset pour la prochaine carte\n    setCurrentPlayer(nextPlayer);\n    setMessage(`${playerNames[nextPlayer]}, à toi de jouer pour le tour ${roundNumber}.`);\n  };\n  const renderRecap = () => {\n    return playerNames.map((name, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [name, \" :\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), playerCards[index].map((card, cardIndex) => /*#__PURE__*/_jsxDEV(CardIcon, {\n        value: card.value,\n        suit: card.suit\n      }, cardIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this));\n  };\n  const handleContinueToRecap = () => {\n    setShowRecap(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: startGame ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: showRecap ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"R\\xE9capitulatif provisoire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), renderRecap(), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => alert(\"Phase suivante bientôt\"),\n          children: \"On passe \\xE0 la suite !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this) : showIntermediatePage ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"La premi\\xE8re phase de jeu est termin\\xE9e !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Vous pouvez reposer vos foies... Mais pas trop longtemps car la suite arrive !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleContinueToRecap,\n          children: \"Passer au r\\xE9cap provisoire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), cardRevealed && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Carte r\\xE9v\\xE9l\\xE9e : \", currentCard.value, \" de \", currentCard.suit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this), playerCards[currentPlayer].length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Cartes tir\\xE9es par \", playerNames[currentPlayer]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this), playerCards[currentPlayer].map((card, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [card.value, \" de \", card.suit]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), roundNumber === 1 && !showDistribution && !cardRevealed && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Devinez si la carte est rouge ou noire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePlayerGuess('rouge'),\n            children: \"Rouge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePlayerGuess('noir'),\n            children: \"Noir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this), roundNumber === 2 && !showDistribution && !cardRevealed && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Devinez si la carte est sup\\xE9rieure, inf\\xE9rieure ou \\xE9gale \\xE0 la premi\\xE8re\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePlayerGuess('supérieure'),\n            children: \"Sup\\xE9rieure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePlayerGuess('inférieure'),\n            children: \"Inf\\xE9rieure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePlayerGuess('égale'),\n            children: \"\\xC9gale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this), roundNumber === 3 && !showDistribution && !cardRevealed && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Devinez si la carte est \\xE0 l'int\\xE9rieur ou \\xE0 l'ext\\xE9rieur des cartes pr\\xE9c\\xE9dentes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePlayerGuess('intérieur'),\n            children: \"\\xC0 l'int\\xE9rieur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePlayerGuess('extérieur'),\n            children: \"\\xC0 l'ext\\xE9rieur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), roundNumber === 4 && !showDistribution && !cardRevealed && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Devinez la forme de la carte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePlayerGuess('cœur'),\n            children: \"C\\u0153ur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePlayerGuess('carreau'),\n            children: \"Carreau\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePlayerGuess('pique'),\n            children: \"Pique\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePlayerGuess('trèfle'),\n            children: \"Tr\\xE8fle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this), waitingForConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextTurn,\n            children: \"J'ai bu, tour suivant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-setup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"L'Ardechoise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: WowGuy,\n        alt: \"WOW Guy\",\n        className: \"wow-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"numPlayers\",\n          children: \"Nombre de joueurs :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"numPlayers\",\n          value: numPlayers,\n          onChange: handleNumPlayersChange,\n          children: [...Array(9).keys()].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: num + 2,\n            children: num + 2\n          }, num + 2, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-names\",\n          children: playerNames.map((name, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: `Joueur ${index + 1}`,\n            value: name,\n            onChange: e => handlePlayerNameChange(e, index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-game-btn\",\n        onClick: handleStartGame,\n        children: \"Lancer le jeu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bb3QDVyOcYK09UXvpxWHW1O0LKo=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"CardIcon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","WowGuy","jsxDEV","_jsxDEV","CardIcon","value","suit","suitSymbols","color","style","display","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","numPlayers","setNumPlayers","playerNames","setPlayerNames","Array","fill","startGame","setStartGame","currentPlayer","setCurrentPlayer","roundNumber","setRoundNumber","message","setMessage","currentCard","setCurrentCard","playerCards","setPlayerCards","gorgeesDistribuees","setGorgeesDistribuees","gorgeesRecues","setGorgeesRecues","showRecap","setShowRecap","waitingForConfirmation","setWaitingForConfirmation","showIntermediatePage","setShowIntermediatePage","cardRevealed","setCardRevealed","suits","generateCard","Math","floor","random","handleNumPlayersChange","e","parseInt","target","handlePlayerNameChange","index","newPlayerNames","handleStartGame","every","name","trim","card","alert","handlePlayerGuess","guess","newPlayerCards","nextTurn","nextPlayer","prev","newCard","renderRecap","map","cardIndex","handleContinueToRecap","className","onClick","length","showDistribution","handleNextTurn","src","alt","htmlFor","id","onChange","keys","num","type","placeholder","_c2","$RefreshReg$"],"sources":["C:/Users/marti/OneDrive/Bureau/ardede/ardede/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './app.css';\nimport WowGuy from './assets/images/WowGuy.webp';\n\n// Fonction pour afficher un icône de carte\nconst CardIcon = ({ value, suit }) => {\n  const suitSymbols = {\n    'cœur': '♥️',\n    'carreau': '♦️',\n    'pique': '♠️',\n    'trèfle': '♣️',\n  };\n  const color = (suit === 'cœur' || suit === 'carreau') ? 'red' : 'black';\n  \n  return (\n    <div style={{ display: 'inline-block', margin: '5px', color }}>\n      {value} {suitSymbols[suit]}\n    </div>\n  );\n};\n\nfunction App() {\n  const [numPlayers, setNumPlayers] = useState(2);\n  const [playerNames, setPlayerNames] = useState(Array(numPlayers).fill(''));\n  const [startGame, setStartGame] = useState(false);\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [message, setMessage] = useState('');\n  const [currentCard, setCurrentCard] = useState(null);\n  const [playerCards, setPlayerCards] = useState(Array(numPlayers).fill([]));\n  const [gorgeesDistribuees, setGorgeesDistribuees] = useState(Array(numPlayers).fill(0));\n  const [gorgeesRecues, setGorgeesRecues] = useState(Array(numPlayers).fill(0));\n  const [showRecap, setShowRecap] = useState(false);\n  const [waitingForConfirmation, setWaitingForConfirmation] = useState(false);\n  const [showIntermediatePage, setShowIntermediatePage] = useState(false);\n  const [cardRevealed, setCardRevealed] = useState(false); // Ajout de cet état manquant\n\n  const suits = ['cœur', 'carreau', 'pique', 'trèfle'];\n\n  const generateCard = () => {\n    const value = Math.floor(Math.random() * 13) + 1;\n    const suit = suits[Math.floor(Math.random() * 4)];\n    return { value, suit };\n  };\n\n  const handleNumPlayersChange = (e) => {\n    const value = parseInt(e.target.value);\n    setNumPlayers(value);\n    setPlayerNames(Array(value).fill(''));\n    setPlayerCards(Array(value).fill([]));\n  };\n\n  const handlePlayerNameChange = (e, index) => {\n    const newPlayerNames = [...playerNames];\n    newPlayerNames[index] = e.target.value;\n    setPlayerNames(newPlayerNames);\n  };\n\n  const handleStartGame = () => {\n    if (playerNames.every(name => name.trim() !== '')) {\n      setStartGame(true);\n      setMessage(`${playerNames[currentPlayer]} commence le tour 1 : Rouge ou Noir.`);\n      const card = generateCard();\n      setCurrentCard(card);\n      setCardRevealed(false); // Reset de l'état de carte révélée à chaque début de tour\n    } else {\n      alert('Veuillez remplir tous les noms des joueurs.');\n    }\n  };\n\n  const handlePlayerGuess = (guess) => {\n    setCardRevealed(true); // Carte révélée\n\n    // Ajout des cartes dans le tableau de chaque joueur\n    const newPlayerCards = [...playerCards];\n    newPlayerCards[currentPlayer] = [...newPlayerCards[currentPlayer], currentCard];\n    setPlayerCards(newPlayerCards);\n\n    // Gérer le message et continuer le tour\n    setMessage(`${playerNames[currentPlayer]} a tiré ${currentCard.value} de ${currentCard.suit}.`);\n\n    nextTurn();\n  };\n\n  const nextTurn = () => {\n    let nextPlayer = (currentPlayer + 1) % numPlayers;\n\n    if (nextPlayer === 0) {\n      if (roundNumber === 4) {\n        setShowIntermediatePage(true);\n        return;\n      }\n      setRoundNumber((prev) => (prev % 4) + 1);\n    }\n\n    const newCard = generateCard();\n    setCurrentCard(newCard);\n    setCardRevealed(false); // Reset pour la prochaine carte\n    setCurrentPlayer(nextPlayer);\n    setMessage(`${playerNames[nextPlayer]}, à toi de jouer pour le tour ${roundNumber}.`);\n  };\n\n  const renderRecap = () => {\n    return playerNames.map((name, index) => (\n      <div key={index}>\n        <strong>{name} :</strong>\n        {playerCards[index].map((card, cardIndex) => (\n          <CardIcon key={cardIndex} value={card.value} suit={card.suit} />\n        ))}\n      </div>\n    ));\n  };\n\n  const handleContinueToRecap = () => {\n    setShowRecap(true);\n  };\n\n  return (\n    <div className=\"App\">\n      {startGame ? (\n        <div className=\"game\">\n          {showRecap ? (\n            <div>\n              <h2>Récapitulatif provisoire</h2>\n              {renderRecap()}\n              <button onClick={() => alert(\"Phase suivante bientôt\")}>On passe à la suite !</button>\n            </div>\n          ) : showIntermediatePage ? (\n            <div>\n              <h2>La première phase de jeu est terminée !</h2>\n              <p>Vous pouvez reposer vos foies... Mais pas trop longtemps car la suite arrive !</p>\n              <button onClick={handleContinueToRecap}>Passer au récap provisoire</button>\n            </div>\n          ) : (\n            <div>\n              <h2>{message}</h2>\n              {cardRevealed && (\n                <p>Carte révélée : {currentCard.value} de {currentCard.suit}</p>\n              )}\n\n              {playerCards[currentPlayer].length > 0 && (\n                <div>\n                  <h3>Cartes tirées par {playerNames[currentPlayer]}</h3>\n                  {playerCards[currentPlayer].map((card, index) => (\n                    <p key={index}>\n                      {card.value} de {card.suit}\n                    </p>\n                  ))}\n                </div>\n              )}\n\n              {roundNumber === 1 && !showDistribution && !cardRevealed && (\n                <div>\n                  <h3>Devinez si la carte est rouge ou noire</h3>\n                  <button onClick={() => handlePlayerGuess('rouge')}>Rouge</button>\n                  <button onClick={() => handlePlayerGuess('noir')}>Noir</button>\n                </div>\n              )}\n\n              {roundNumber === 2 && !showDistribution && !cardRevealed && (\n                <div>\n                  <h3>Devinez si la carte est supérieure, inférieure ou égale à la première</h3>\n                  <button onClick={() => handlePlayerGuess('supérieure')}>Supérieure</button>\n                  <button onClick={() => handlePlayerGuess('inférieure')}>Inférieure</button>\n                  <button onClick={() => handlePlayerGuess('égale')}>Égale</button>\n                </div>\n              )}\n\n              {roundNumber === 3 && !showDistribution && !cardRevealed && (\n                <div>\n                  <h3>Devinez si la carte est à l'intérieur ou à l'extérieur des cartes précédentes</h3>\n                  <button onClick={() => handlePlayerGuess('intérieur')}>À l'intérieur</button>\n                  <button onClick={() => handlePlayerGuess('extérieur')}>À l'extérieur</button>\n                </div>\n              )}\n\n              {roundNumber === 4 && !showDistribution && !cardRevealed && (\n                <div>\n                  <h3>Devinez la forme de la carte</h3>\n                  <button onClick={() => handlePlayerGuess('cœur')}>Cœur</button>\n                  <button onClick={() => handlePlayerGuess('carreau')}>Carreau</button>\n                  <button onClick={() => handlePlayerGuess('pique')}>Pique</button>\n                  <button onClick={() => handlePlayerGuess('trèfle')}>Trèfle</button>\n                </div>\n              )}\n\n              {/* Afficher le bouton de confirmation lorsque le joueur a perdu */}\n              {waitingForConfirmation && (\n                <div>\n                  <button onClick={handleNextTurn}>J'ai bu, tour suivant</button>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      ) : (\n        <div className=\"player-setup\">\n          <h1 className=\"title\">L'Ardechoise</h1>\n          <img src={WowGuy} alt=\"WOW Guy\" className=\"wow-image\" />\n          <div className=\"player-selection\">\n            <label htmlFor=\"numPlayers\">Nombre de joueurs :</label>\n            <select id=\"numPlayers\" value={numPlayers} onChange={handleNumPlayersChange}>\n              {[...Array(9).keys()].map((num) => (\n                <option key={num + 2} value={num + 2}>\n                  {num + 2}\n                </option>\n              ))}\n            </select>\n\n            <div className=\"player-names\">\n              {playerNames.map((name, index) => (\n                <input\n                  key={index}\n                  type=\"text\"\n                  placeholder={`Joueur ${index + 1}`}\n                  value={name}\n                  onChange={(e) => handlePlayerNameChange(e, index)}\n                />\n              ))}\n            </div>\n          </div>\n\n          <button className=\"start-game-btn\" onClick={handleStartGame}>Lancer le jeu</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}