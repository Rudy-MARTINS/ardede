{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Bureau\\\\ardede\\\\ardede\\\\src\\\\components\\\\DonnePrendPhase\\\\DonnePrendPhase.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DonnePrendPhase({\n  playerNames,\n  playerCards,\n  // Les cartes tirées par les joueurs\n  gorgeesDistribuees,\n  setGorgeesDistribuees\n}) {\n  _s();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [cardRevealed, setCardRevealed] = useState(false);\n\n  // Ordre des étapes dans la phase Donne/Prend\n  const steps = [{\n    label: \"Je donne 1 gorgée\",\n    action: \"donner\",\n    gorgees: 1\n  }, {\n    label: \"Je prends 1 gorgée\",\n    action: \"prendre\",\n    gorgees: 1\n  }, {\n    label: \"Je donne 2 gorgées\",\n    action: \"donner\",\n    gorgees: 2\n  }, {\n    label: \"Je prends 2 gorgées\",\n    action: \"prendre\",\n    gorgees: 2\n  }, {\n    label: \"Je donne 3 gorgées\",\n    action: \"donner\",\n    gorgees: 3\n  }, {\n    label: \"Je prends 3 gorgées\",\n    action: \"prendre\",\n    gorgees: 3\n  }, {\n    label: \"Je donne 4 gorgées\",\n    action: \"donner\",\n    gorgees: 4\n  }, {\n    label: \"Je prends 4 gorgées\",\n    action: \"prendre\",\n    gorgees: 4\n  }, {\n    label: \"Cul Sec !\",\n    action: \"cul-sec\",\n    gorgees: 0\n  }];\n\n  // La carte actuellement jouée pour la phase\n  const currentCard = {\n    value: 1,\n    suit: 'pique'\n  }; // Exemple de carte, ici l'As de Pique\n\n  // Fonction pour révéler la carte et lancer l'action\n  const revealCard = () => {\n    setCardRevealed(true);\n    const step = steps[currentStep];\n    alert(`Carte révélée : ${step.label} (${currentCard.value} de ${currentCard.suit})`);\n    handleAction(step.action, step.gorgees);\n  };\n\n  // Vérifier quelles cartes les joueurs ont tirées qui correspondent à la carte actuelle\n  const checkMatchingCards = () => {\n    return playerNames.map((_, index) => {\n      const matchingCards = playerCards[index].filter(card => card.value === currentCard.value);\n      return matchingCards.length > 0; // Retourne vrai si le joueur a une carte correspondante\n    });\n  };\n\n  // Fonction pour distribuer les gorgées\n  const handleDistribute = (playerIndex, gorgees) => {\n    const newGorgeesDistribuees = [...gorgeesDistribuees];\n    newGorgeesDistribuees[playerIndex] += gorgees;\n    setGorgeesDistribuees(newGorgeesDistribuees);\n    alert(`${playerNames[playerIndex]} a distribué ${gorgees} gorgée(s)`);\n  };\n\n  // Gestion de l'action (donner ou prendre)\n  const handleAction = (action, gorgees) => {\n    if (action === \"donner\") {\n      alert(\"Distribuer les gorgées !\");\n      const matchingPlayers = checkMatchingCards();\n      matchingPlayers.forEach((match, index) => {\n        if (match) {\n          handleDistribute(index, gorgees);\n        }\n      });\n    } else if (action === \"prendre\") {\n      alert(`Vous devez boire ${gorgees} gorgée(s) !`);\n    } else if (action === \"cul-sec\") {\n      alert(\"Cul Sec ! Fin de la phase.\");\n    }\n    nextStep();\n  };\n  const nextStep = () => {\n    if (currentStep < steps.length - 1) {\n      setCurrentStep(currentStep + 1);\n      setCardRevealed(false);\n    } else {\n      alert(\"Fin de la phase Donne/Prend !\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phase Donne / Prend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: steps[currentStep].label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), !cardRevealed && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: revealCard,\n      children: \"R\\xE9v\\xE9ler la carte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), cardRevealed && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextStep,\n        children: \"Continuer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(DonnePrendPhase, \"b8oDEzvuaS9/4z8lJnhW3JHL6Bw=\");\n_c = DonnePrendPhase;\nexport default DonnePrendPhase;\nvar _c;\n$RefreshReg$(_c, \"DonnePrendPhase\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DonnePrendPhase","playerNames","playerCards","gorgeesDistribuees","setGorgeesDistribuees","_s","currentStep","setCurrentStep","cardRevealed","setCardRevealed","steps","label","action","gorgees","currentCard","value","suit","revealCard","step","alert","handleAction","checkMatchingCards","map","_","index","matchingCards","filter","card","length","handleDistribute","playerIndex","newGorgeesDistribuees","matchingPlayers","forEach","match","nextStep","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/marti/OneDrive/Bureau/ardede/ardede/src/components/DonnePrendPhase/DonnePrendPhase.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction DonnePrendPhase({\n  playerNames,\n  playerCards, // Les cartes tirées par les joueurs\n  gorgeesDistribuees,\n  setGorgeesDistribuees,\n}) {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [cardRevealed, setCardRevealed] = useState(false);\n\n  // Ordre des étapes dans la phase Donne/Prend\n  const steps = [\n    { label: \"Je donne 1 gorgée\", action: \"donner\", gorgees: 1 },\n    { label: \"Je prends 1 gorgée\", action: \"prendre\", gorgees: 1 },\n    { label: \"Je donne 2 gorgées\", action: \"donner\", gorgees: 2 },\n    { label: \"Je prends 2 gorgées\", action: \"prendre\", gorgees: 2 },\n    { label: \"Je donne 3 gorgées\", action: \"donner\", gorgees: 3 },\n    { label: \"Je prends 3 gorgées\", action: \"prendre\", gorgees: 3 },\n    { label: \"Je donne 4 gorgées\", action: \"donner\", gorgees: 4 },\n    { label: \"Je prends 4 gorgées\", action: \"prendre\", gorgees: 4 },\n    { label: \"Cul Sec !\", action: \"cul-sec\", gorgees: 0 },\n  ];\n\n  // La carte actuellement jouée pour la phase\n  const currentCard = { value: 1, suit: 'pique' }; // Exemple de carte, ici l'As de Pique\n\n  // Fonction pour révéler la carte et lancer l'action\n  const revealCard = () => {\n    setCardRevealed(true);\n    const step = steps[currentStep];\n    alert(`Carte révélée : ${step.label} (${currentCard.value} de ${currentCard.suit})`);\n    handleAction(step.action, step.gorgees);\n  };\n\n  // Vérifier quelles cartes les joueurs ont tirées qui correspondent à la carte actuelle\n  const checkMatchingCards = () => {\n    return playerNames.map((_, index) => {\n      const matchingCards = playerCards[index].filter(card => card.value === currentCard.value);\n      return matchingCards.length > 0; // Retourne vrai si le joueur a une carte correspondante\n    });\n  };\n\n  // Fonction pour distribuer les gorgées\n  const handleDistribute = (playerIndex, gorgees) => {\n    const newGorgeesDistribuees = [...gorgeesDistribuees];\n    newGorgeesDistribuees[playerIndex] += gorgees;\n    setGorgeesDistribuees(newGorgeesDistribuees);\n    alert(`${playerNames[playerIndex]} a distribué ${gorgees} gorgée(s)`);\n  };\n\n  // Gestion de l'action (donner ou prendre)\n  const handleAction = (action, gorgees) => {\n    if (action === \"donner\") {\n      alert(\"Distribuer les gorgées !\");\n      const matchingPlayers = checkMatchingCards();\n      matchingPlayers.forEach((match, index) => {\n        if (match) {\n          handleDistribute(index, gorgees);\n        }\n      });\n    } else if (action === \"prendre\") {\n      alert(`Vous devez boire ${gorgees} gorgée(s) !`);\n    } else if (action === \"cul-sec\") {\n      alert(\"Cul Sec ! Fin de la phase.\");\n    }\n    nextStep();\n  };\n\n  const nextStep = () => {\n    if (currentStep < steps.length - 1) {\n      setCurrentStep(currentStep + 1);\n      setCardRevealed(false);\n    } else {\n      alert(\"Fin de la phase Donne/Prend !\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phase Donne / Prend</h2>\n      <p>{steps[currentStep].label}</p>\n      {!cardRevealed && (\n        <button onClick={revealCard}>Révéler la carte</button>\n      )}\n      {cardRevealed && (\n        <div>\n          <button onClick={nextStep}>Continuer</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DonnePrendPhase;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}