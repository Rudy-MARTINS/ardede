{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Bureau\\\\ardede\\\\ardede\\\\src\\\\components\\\\Game\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Round1 from '../Round1/Round1';\nimport Round2 from '../Round2/Round2';\nimport Round3 from '../Round3/Round3';\nimport Round4 from '../Round4/Round4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game({\n  players\n}) {\n  _s();\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n  const [deck, setDeck] = useState(shuffleDeck(createDeck()));\n  const [playerCards, setPlayerCards] = useState({});\n  const [currentRound, setCurrentRound] = useState(1);\n  const handleAction = (actionType, gorgées) => {\n    if (actionType === 'next') {\n      if (currentPlayerIndex < players.length - 1) {\n        setCurrentPlayerIndex(currentPlayerIndex + 1);\n      } else {\n        if (currentRound < 4) {\n          setCurrentRound(currentRound + 1);\n          setCurrentPlayerIndex(0);\n        } else {\n          console.log(\"Le jeu est terminé !\");\n        }\n      }\n    } else {\n      // Gérer les gorgées ici\n    }\n  };\n  const saveCard = (player, card) => {\n    setPlayerCards(prevCards => ({\n      ...prevCards,\n      [player]: [...(prevCards[player] || []), card]\n    }));\n  };\n  const getRoundComponent = () => {\n    switch (currentRound) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Round1, {\n          player: players[currentPlayerIndex],\n          onAction: handleAction,\n          deck: deck,\n          onSaveCard: saveCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Round2, {\n          player: players[currentPlayerIndex],\n          onAction: handleAction,\n          deck: deck,\n          previousCard: playerCards[players[currentPlayerIndex]][0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(Round3, {\n          player: players[currentPlayerIndex],\n          onAction: handleAction,\n          deck: deck,\n          previousCards: playerCards[players[currentPlayerIndex]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this);\n      case 4:\n        return /*#__PURE__*/_jsxDEV(Round4, {\n          player: players[currentPlayerIndex],\n          onAction: handleAction,\n          deck: deck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Le jeu est termin\\xE9 !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: getRoundComponent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n// Fonctions utilitaires pour créer et mélanger un jeu de cartes\n_s(Game, \"pcNVZukuaSVJrINHZNVa5z5Fhvc=\");\n_c = Game;\nfunction createDeck() {\n  const suits = ['Coeur', 'Carreau', 'Pique', 'Trèfle'];\n  const values = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'Valet', 'Reine', 'Roi', 'As'];\n  const deck = [];\n  suits.forEach(suit => {\n    values.forEach(value => {\n      deck.push({\n        suit,\n        value\n      });\n    });\n  });\n  return deck;\n}\nfunction shuffleDeck(deck) {\n  for (let i = deck.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [deck[i], deck[j]] = [deck[j], deck[i]];\n  }\n  return deck;\n}\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Round1","Round2","Round3","Round4","jsxDEV","_jsxDEV","Game","players","_s","currentPlayerIndex","setCurrentPlayerIndex","deck","setDeck","shuffleDeck","createDeck","playerCards","setPlayerCards","currentRound","setCurrentRound","handleAction","actionType","gorgées","length","console","log","saveCard","player","card","prevCards","getRoundComponent","onAction","onSaveCard","fileName","_jsxFileName","lineNumber","columnNumber","previousCard","previousCards","children","className","_c","suits","values","forEach","suit","value","push","i","j","Math","floor","random","$RefreshReg$"],"sources":["C:/Users/marti/OneDrive/Bureau/ardede/ardede/src/components/Game/Game.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Round1 from '../Round1/Round1';\nimport Round2 from '../Round2/Round2';\nimport Round3 from '../Round3/Round3';\nimport Round4 from '../Round4/Round4';\n\nfunction Game({ players }) {\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n  const [deck, setDeck] = useState(shuffleDeck(createDeck()));\n  const [playerCards, setPlayerCards] = useState({});\n  const [currentRound, setCurrentRound] = useState(1);\n\n  const handleAction = (actionType, gorgées) => {\n    if (actionType === 'next') {\n      if (currentPlayerIndex < players.length - 1) {\n        setCurrentPlayerIndex(currentPlayerIndex + 1);\n      } else {\n        if (currentRound < 4) {\n          setCurrentRound(currentRound + 1);\n          setCurrentPlayerIndex(0);\n        } else {\n          console.log(\"Le jeu est terminé !\");\n        }\n      }\n    } else {\n      // Gérer les gorgées ici\n    }\n  };\n\n  const saveCard = (player, card) => {\n    setPlayerCards((prevCards) => ({\n      ...prevCards,\n      [player]: [...(prevCards[player] || []), card],\n    }));\n  };\n\n  const getRoundComponent = () => {\n    switch (currentRound) {\n      case 1:\n        return <Round1 player={players[currentPlayerIndex]} onAction={handleAction} deck={deck} onSaveCard={saveCard} />;\n      case 2:\n        return <Round2 player={players[currentPlayerIndex]} onAction={handleAction} deck={deck} previousCard={playerCards[players[currentPlayerIndex]][0]} />;\n      case 3:\n        return <Round3 player={players[currentPlayerIndex]} onAction={handleAction} deck={deck} previousCards={playerCards[players[currentPlayerIndex]]} />;\n      case 4:\n        return <Round4 player={players[currentPlayerIndex]} onAction={handleAction} deck={deck} />;\n      default:\n        return <p>Le jeu est terminé !</p>;\n    }\n  };\n\n  return (\n    <div className=\"game\">\n      {getRoundComponent()}\n    </div>\n  );\n}\n\n// Fonctions utilitaires pour créer et mélanger un jeu de cartes\nfunction createDeck() {\n  const suits = ['Coeur', 'Carreau', 'Pique', 'Trèfle'];\n  const values = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'Valet', 'Reine', 'Roi', 'As'];\n  const deck = [];\n\n  suits.forEach((suit) => {\n    values.forEach((value) => {\n      deck.push({ suit, value }); \n    });\n  });\n\n  return deck;\n}\n\nfunction shuffleDeck(deck) {\n  for (let i = deck.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [deck[i], deck[j]] = [deck[j], deck[i]];\n  }\n  return deck;\n}\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}