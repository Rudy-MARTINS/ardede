{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Bureau\\\\ardede\\\\ardede\\\\src\\\\components\\\\Game\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Round1 from '../Round1/Round1'; // Assurez-vous que le chemin est correct pour le composant Round1\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game({\n  players\n}) {\n  _s();\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n  const [deck, setDeck] = useState(shuffleDeck(createDeck()));\n  const [playerCards, setPlayerCards] = useState({});\n\n  // Fonction pour sauvegarder la carte d'un joueur\n  const saveCard = (player, card) => {\n    setPlayerCards(prevCards => ({\n      ...prevCards,\n      [player]: [...(prevCards[player] || []), card]\n    }));\n  };\n\n  // Gestion du passage au joueur suivant ou au prochain round\n  const handleNextRound = () => {\n    if (currentPlayerIndex < players.length - 1) {\n      setCurrentPlayerIndex(currentPlayerIndex + 1); // Passe au joueur suivant\n    } else {\n      console.log('Fin du Round 1, passez au Round 2');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: /*#__PURE__*/_jsxDEV(Round1, {\n      player: players[currentPlayerIndex],\n      deck: deck,\n      onAction: handleNextRound,\n      onSaveCard: saveCard // Assurez-vous que onSaveCard est bien passé ici\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n// Création du deck de cartes\n_s(Game, \"E5akonRnDRcY6YsVP2Eb89cjM44=\");\n_c = Game;\nfunction createDeck() {\n  const suits = ['hearts', 'diamonds', 'spades', 'clubs'];\n  const values = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n  const deck = [];\n  suits.forEach(suit => {\n    values.forEach(value => {\n      deck.push({\n        suit,\n        value\n      });\n    });\n  });\n  return deck;\n}\n\n// Fonction pour mélanger le deck\nfunction shuffleDeck(deck) {\n  for (let i = deck.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [deck[i], deck[j]] = [deck[j], deck[i]];\n  }\n  return deck;\n}\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Round1","jsxDEV","_jsxDEV","Game","players","_s","currentPlayerIndex","setCurrentPlayerIndex","deck","setDeck","shuffleDeck","createDeck","playerCards","setPlayerCards","saveCard","player","card","prevCards","handleNextRound","length","console","log","className","children","onAction","onSaveCard","fileName","_jsxFileName","lineNumber","columnNumber","_c","suits","values","forEach","suit","value","push","i","j","Math","floor","random","$RefreshReg$"],"sources":["C:/Users/marti/OneDrive/Bureau/ardede/ardede/src/components/Game/Game.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Round1 from '../Round1/Round1'; // Assurez-vous que le chemin est correct pour le composant Round1\n\nfunction Game({ players }) {\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n  const [deck, setDeck] = useState(shuffleDeck(createDeck()));\n  const [playerCards, setPlayerCards] = useState({});\n\n  // Fonction pour sauvegarder la carte d'un joueur\n  const saveCard = (player, card) => {\n    setPlayerCards((prevCards) => ({\n      ...prevCards,\n      [player]: [...(prevCards[player] || []), card],\n    }));\n  };\n\n  // Gestion du passage au joueur suivant ou au prochain round\n  const handleNextRound = () => {\n    if (currentPlayerIndex < players.length - 1) {\n      setCurrentPlayerIndex(currentPlayerIndex + 1); // Passe au joueur suivant\n    } else {\n      console.log('Fin du Round 1, passez au Round 2');\n    }\n  };\n\n  return (\n    <div className=\"game\">\n      <Round1\n        player={players[currentPlayerIndex]}\n        deck={deck}\n        onAction={handleNextRound}\n        onSaveCard={saveCard} // Assurez-vous que onSaveCard est bien passé ici\n      />\n    </div>\n  );\n}\n\n// Création du deck de cartes\nfunction createDeck() {\n  const suits = ['hearts', 'diamonds', 'spades', 'clubs'];\n  const values = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n  const deck = [];\n\n  suits.forEach((suit) => {\n    values.forEach((value) => {\n      deck.push({ suit, value });\n    });\n  });\n\n  return deck;\n}\n\n// Fonction pour mélanger le deck\nfunction shuffleDeck(deck) {\n  for (let i = deck.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [deck[i], deck[j]] = [deck[j], deck[i]];\n  }\n  return deck;\n}\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}