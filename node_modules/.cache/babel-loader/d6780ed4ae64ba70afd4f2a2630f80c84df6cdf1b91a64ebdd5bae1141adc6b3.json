{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Bureau\\\\ardede\\\\ardede\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [numPlayers, setNumPlayers] = useState(2); // Nombre de joueurs\n  const [playerNames, setPlayerNames] = useState(Array(numPlayers).fill('')); // Noms des joueurs\n  const [startGame, setStartGame] = useState(false); // Démarrage du jeu\n  const [currentTurn, setCurrentTurn] = useState(0); // Suivi des tours\n  const [currentPlayer, setCurrentPlayer] = useState(0); // Suivi du joueur actuel\n  const [message, setMessage] = useState(''); // Messages de feedback\n\n  const totalTurns = 4; // 4 tours dans la première phase\n\n  // Gestion du nombre de joueurs\n  const handleNumPlayersChange = e => {\n    const value = parseInt(e.target.value);\n    setNumPlayers(value);\n    setPlayerNames(Array(value).fill(''));\n  };\n\n  // Gestion du changement de pseudo\n  const handlePlayerNameChange = (e, index) => {\n    const newPlayerNames = [...playerNames];\n    newPlayerNames[index] = e.target.value;\n    setPlayerNames(newPlayerNames);\n  };\n\n  // Démarrer le jeu après avoir saisi les pseudos\n  const handleStartGame = () => {\n    if (playerNames.every(name => name.trim() !== '')) {\n      setStartGame(true);\n      setMessage(`Le jeu commence avec ${playerNames[currentPlayer]}.`);\n    } else {\n      alert('Veuillez remplir tous les noms des joueurs.');\n    }\n  };\n\n  // Fonction pour avancer au tour suivant\n  const nextTurn = () => {\n    let nextPlayer = (currentPlayer + 1) % numPlayers;\n    let nextTurn = currentTurn + 1;\n    if (nextTurn >= totalTurns) {\n      setMessage('Fin de la première phase !');\n      // Tu peux ajouter ici le passage à la deuxième phase\n    } else {\n      setCurrentTurn(nextTurn);\n      setCurrentPlayer(nextPlayer);\n      setMessage(`${playerNames[nextPlayer]}, à ton tour !`);\n    }\n  };\n  if (startGame) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextTurn,\n        children: \"Tour Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"L'Ardechoise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"numPlayers\",\n        children: \"Nombre de joueurs :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"numPlayers\",\n        value: numPlayers,\n        onChange: handleNumPlayersChange,\n        children: [...Array(9).keys()].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: num + 2,\n          children: num + 2\n        }, num + 2, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-names\",\n        children: playerNames.map((name, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `Joueur ${index + 1}`,\n          value: name,\n          onChange: e => handlePlayerNameChange(e, index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-game-btn\",\n      onClick: handleStartGame,\n      children: \"Lancer le jeu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"leSqL5n78rHX3PAXXR0mP2o6H6Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","numPlayers","setNumPlayers","playerNames","setPlayerNames","Array","fill","startGame","setStartGame","currentTurn","setCurrentTurn","currentPlayer","setCurrentPlayer","message","setMessage","totalTurns","handleNumPlayersChange","e","value","parseInt","target","handlePlayerNameChange","index","newPlayerNames","handleStartGame","every","name","trim","alert","nextTurn","nextPlayer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","id","onChange","keys","map","num","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/marti/OneDrive/Bureau/ardede/ardede/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './app.css';\n\nfunction App() {\n  const [numPlayers, setNumPlayers] = useState(2); // Nombre de joueurs\n  const [playerNames, setPlayerNames] = useState(Array(numPlayers).fill('')); // Noms des joueurs\n  const [startGame, setStartGame] = useState(false); // Démarrage du jeu\n  const [currentTurn, setCurrentTurn] = useState(0); // Suivi des tours\n  const [currentPlayer, setCurrentPlayer] = useState(0); // Suivi du joueur actuel\n  const [message, setMessage] = useState(''); // Messages de feedback\n\n  const totalTurns = 4; // 4 tours dans la première phase\n\n  // Gestion du nombre de joueurs\n  const handleNumPlayersChange = (e) => {\n    const value = parseInt(e.target.value);\n    setNumPlayers(value);\n    setPlayerNames(Array(value).fill(''));\n  };\n\n  // Gestion du changement de pseudo\n  const handlePlayerNameChange = (e, index) => {\n    const newPlayerNames = [...playerNames];\n    newPlayerNames[index] = e.target.value;\n    setPlayerNames(newPlayerNames);\n  };\n\n  // Démarrer le jeu après avoir saisi les pseudos\n  const handleStartGame = () => {\n    if (playerNames.every(name => name.trim() !== '')) {\n      setStartGame(true);\n      setMessage(`Le jeu commence avec ${playerNames[currentPlayer]}.`);\n    } else {\n      alert('Veuillez remplir tous les noms des joueurs.');\n    }\n  };\n\n  // Fonction pour avancer au tour suivant\n  const nextTurn = () => {\n    let nextPlayer = (currentPlayer + 1) % numPlayers;\n    let nextTurn = currentTurn + 1;\n\n    if (nextTurn >= totalTurns) {\n      setMessage('Fin de la première phase !');\n      // Tu peux ajouter ici le passage à la deuxième phase\n    } else {\n      setCurrentTurn(nextTurn);\n      setCurrentPlayer(nextPlayer);\n      setMessage(`${playerNames[nextPlayer]}, à ton tour !`);\n    }\n  };\n\n  if (startGame) {\n    return (\n      <div className=\"game\">\n        <h2>{message}</h2>\n        <button onClick={nextTurn}>Tour Suivant</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">L'Ardechoise</h1>\n\n      {/* Sélecteur de nombre de joueurs */}\n      <div className=\"player-selection\">\n        <label htmlFor=\"numPlayers\">Nombre de joueurs :</label>\n        <select id=\"numPlayers\" value={numPlayers} onChange={handleNumPlayersChange}>\n          {[...Array(9).keys()].map((num) => (\n            <option key={num + 2} value={num + 2}>\n              {num + 2}\n            </option>\n          ))}\n        </select>\n\n        {/* Champs de saisie pour les noms des joueurs */}\n        <div className=\"player-names\">\n          {playerNames.map((name, index) => (\n            <input\n              key={index}\n              type=\"text\"\n              placeholder={`Joueur ${index + 1}`}\n              value={name}\n              onChange={(e) => handlePlayerNameChange(e, index)}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Bouton pour lancer le jeu */}\n      <button className=\"start-game-btn\" onClick={handleStartGame}>Lancer le jeu</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}