{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Bureau\\\\ardede\\\\ardede\\\\src\\\\components\\\\Game\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Round1 from '../round1/Round1';\nimport Round2 from '../round2/Round2';\nimport Round3 from '../round3/Round3';\nimport Round4 from '../round4/Round4';\nimport Recap from '../recap/Recap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game({\n  players\n}) {\n  _s();\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n  const [currentRound, setCurrentRound] = useState(1);\n  const [deck, setDeck] = useState(shuffleDeck(createDeck()));\n  const [playerCards, setPlayerCards] = useState({});\n  const handleAction = (actionType, gorgées) => {\n    if (actionType === 'next') {\n      if (currentPlayerIndex < players.length - 1) {\n        setCurrentPlayerIndex(currentPlayerIndex + 1);\n      } else {\n        if (currentRound < 4) {\n          setCurrentRound(currentRound + 1);\n          setCurrentPlayerIndex(0);\n        } else {\n          console.log(\"Affichage du récapitulatif !\");\n          setCurrentRound('recap'); // Transition vers l'affichage du récapitulatif\n        }\n      }\n    } else {\n      console.log(`${players[currentPlayerIndex]} doit ${actionType === 'distribute' ? 'distribuer' : 'boire'} ${gorgées} gorgées.`);\n    }\n  };\n  const saveCard = (player, card) => {\n    setPlayerCards(prevCards => ({\n      ...prevCards,\n      [player]: [...(prevCards[player] || []), card]\n    }));\n  };\n  const getRoundComponent = () => {\n    if (currentRound === 'recap') {\n      return /*#__PURE__*/_jsxDEV(Recap, {\n        players: players,\n        playerCards: playerCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this);\n    }\n    switch (currentRound) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Round1, {\n          player: players[currentPlayerIndex],\n          onAction: handleAction,\n          deck: deck,\n          onSaveCard: saveCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 16\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Round2, {\n          player: players[currentPlayerIndex],\n          onAction: handleAction,\n          deck: deck,\n          previousCard: playerCards[players[currentPlayerIndex]][0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(Round3, {\n          player: players[currentPlayerIndex],\n          onAction: handleAction,\n          deck: deck,\n          previousCards: playerCards[players[currentPlayerIndex]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }, this);\n      case 4:\n        return /*#__PURE__*/_jsxDEV(Round4, {\n          player: players[currentPlayerIndex],\n          onAction: handleAction,\n          deck: deck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Le jeu est termin\\xE9 !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: getRoundComponent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"KAZgOAE0Yj41JJ3OUAbmQ1YlWzM=\");\n_c = Game;\nfunction createDeck() {\n  const suits = ['hearts', 'diamonds', 'spades', 'clubs'];\n  const values = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n  const deck = [];\n  suits.forEach(suit => {\n    values.forEach(value => {\n      deck.push({\n        suit,\n        value\n      });\n    });\n  });\n  return deck;\n}\nfunction shuffleDeck(deck) {\n  for (let i = deck.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [deck[i], deck[j]] = [deck[j], deck[i]];\n  }\n  return deck;\n}\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Round1","Round2","Round3","Round4","Recap","jsxDEV","_jsxDEV","Game","players","_s","currentPlayerIndex","setCurrentPlayerIndex","currentRound","setCurrentRound","deck","setDeck","shuffleDeck","createDeck","playerCards","setPlayerCards","handleAction","actionType","gorgées","length","console","log","saveCard","player","card","prevCards","getRoundComponent","fileName","_jsxFileName","lineNumber","columnNumber","onAction","onSaveCard","previousCard","previousCards","children","className","_c","suits","values","forEach","suit","value","push","i","j","Math","floor","random","$RefreshReg$"],"sources":["C:/Users/marti/OneDrive/Bureau/ardede/ardede/src/components/Game/Game.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Round1 from '../round1/Round1';\nimport Round2 from '../round2/Round2';\nimport Round3 from '../round3/Round3';\nimport Round4 from '../round4/Round4';\nimport Recap from '../recap/Recap';\n\nfunction Game({ players }) {\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n  const [currentRound, setCurrentRound] = useState(1);\n  const [deck, setDeck] = useState(shuffleDeck(createDeck()));\n  const [playerCards, setPlayerCards] = useState({});\n\n  const handleAction = (actionType, gorgées) => {\n    if (actionType === 'next') {\n      if (currentPlayerIndex < players.length - 1) {\n        setCurrentPlayerIndex(currentPlayerIndex + 1);\n      } else {\n        if (currentRound < 4) {\n          setCurrentRound(currentRound + 1);\n          setCurrentPlayerIndex(0);\n        } else {\n          console.log(\"Affichage du récapitulatif !\");\n          setCurrentRound('recap'); // Transition vers l'affichage du récapitulatif\n        }\n      }\n    } else {\n      console.log(`${players[currentPlayerIndex]} doit ${actionType === 'distribute' ? 'distribuer' : 'boire'} ${gorgées} gorgées.`);\n    }\n  };\n\n  const saveCard = (player, card) => {\n    setPlayerCards((prevCards) => ({\n      ...prevCards,\n      [player]: [...(prevCards[player] || []), card],\n    }));\n  };\n\n  const getRoundComponent = () => {\n    if (currentRound === 'recap') {\n      return <Recap players={players} playerCards={playerCards} />;\n    }\n\n    switch (currentRound) {\n      case 1:\n        return <Round1 player={players[currentPlayerIndex]} onAction={handleAction} deck={deck} onSaveCard={saveCard} />;\n      case 2:\n        return <Round2 player={players[currentPlayerIndex]} onAction={handleAction} deck={deck} previousCard={playerCards[players[currentPlayerIndex]][0]} />;\n      case 3:\n        return <Round3 player={players[currentPlayerIndex]} onAction={handleAction} deck={deck} previousCards={playerCards[players[currentPlayerIndex]]} />;\n      case 4:\n        return <Round4 player={players[currentPlayerIndex]} onAction={handleAction} deck={deck} />;\n      default:\n        return <p>Le jeu est terminé !</p>;\n    }\n  };\n\n  return (\n    <div className=\"game\">\n      {getRoundComponent()}\n    </div>\n  );\n}\n\nfunction createDeck() {\n  const suits = ['hearts', 'diamonds', 'spades', 'clubs'];\n  const values = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n  const deck = [];\n\n  suits.forEach((suit) => {\n    values.forEach((value) => {\n      deck.push({ suit, value });\n    });\n  });\n\n  return deck;\n}\n\nfunction shuffleDeck(deck) {\n  for (let i = deck.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [deck[i], deck[j]] = [deck[j], deck[i]];\n  }\n  return deck;\n}\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}